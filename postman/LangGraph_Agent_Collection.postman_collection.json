{
	"info": {
		"_postman_id": "0857e169-a35b-4954-9820-65192fb3b1ce",
		"name": "LangGraph_Agent_Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "3606083"
	},
	"item": [
		{
			"name": "create_session",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Has Valid session_id\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    sessionId =  jsonData.session_id;  \r",
							"    pm.expect(sessionId).not.be.null;\r",
							"    pm.expect(sessionId).not.be.empty;\r",
							"    pm.environment.set(\"sessionId\", sessionId);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{API_Base_Url}}/api/v1/sessions/",
					"host": [
						"{{API_Base_Url}}"
					],
					"path": [
						"api",
						"v1",
						"sessions",
						""
					]
				},
				"description": "Generated from cURL: curl -X 'POST' \\\r\n  'http://localhost:8000/api/v1/sessions/' \\\r\n  -H 'accept: application/json' \\\r\n  -H 'Content-Type: application/json' \\\r\n  -d '{}'"
			},
			"response": []
		},
		{
			"name": "Initiate_conversation",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Has Valid session_id\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    sessionId =  jsonData.session_id;  \r",
							"    pm.expect(sessionId).not.be.null;\r",
							"    pm.expect(sessionId).not.be.empty;\r",
							"    pm.environment.set(\"sessionId\", sessionId);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"query\": \"add two number 6 and 7\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{API_Base_Url}}/api/v1/chat/{{sessionId}}/query",
					"host": [
						"{{API_Base_Url}}"
					],
					"path": [
						"api",
						"v1",
						"chat",
						"{{sessionId}}",
						"query"
					]
				},
				"description": "Generated from cURL: curl -X 'POST' \\\r\n  'http://localhost:8000/api/v1/sessions/' \\\r\n  -H 'accept: application/json' \\\r\n  -H 'Content-Type: application/json' \\\r\n  -d '{}'"
			},
			"response": []
		},
		{
			"name": "followup_conversation_context",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Has Valid session_id\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    sessionId =  jsonData.session_id;  \r",
							"    pm.expect(sessionId).not.be.null;\r",
							"    pm.expect(sessionId).not.be.empty;\r",
							"    pm.environment.set(\"sessionId\", sessionId);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"query\": \"add 8 to the result \"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{API_Base_Url}}/api/v1/chat/{{sessionId}}/query",
					"host": [
						"{{API_Base_Url}}"
					],
					"path": [
						"api",
						"v1",
						"chat",
						"{{sessionId}}",
						"query"
					]
				},
				"description": "Generated from cURL: curl -X 'POST' \\\r\n  'http://localhost:8000/api/v1/sessions/' \\\r\n  -H 'accept: application/json' \\\r\n  -H 'Content-Type: application/json' \\\r\n  -d '{}'"
			},
			"response": []
		},
		{
			"name": "Initiate_conversation Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Has Valid session_id\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    sessionId =  jsonData.session_id;  \r",
							"    pm.expect(sessionId).not.be.null;\r",
							"    pm.expect(sessionId).not.be.empty;\r",
							"    pm.environment.set(\"sessionId\", sessionId);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{API_Base_Url}}/api/v1/chat/{{sessionId}}/history",
					"host": [
						"{{API_Base_Url}}"
					],
					"path": [
						"api",
						"v1",
						"chat",
						"{{sessionId}}",
						"history"
					]
				},
				"description": "Generated from cURL: curl -X 'POST' \\\r\n  'http://localhost:8000/api/v1/sessions/' \\\r\n  -H 'accept: application/json' \\\r\n  -H 'Content-Type: application/json' \\\r\n  -d '{}'"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}